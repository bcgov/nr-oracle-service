# retrieve the secret data using lookup function and when not exists, return an empty dictionary / map as result
{{- $certSecret := (randAlphaNum 8) }}
{{- $secretObj := default (dict "data" (dict)) (lookup "v1" "Secret" .Release.Namespace .Release.Name ) }}
{{- if $secretObj.data.certSecret }}
  {{- $certSecret = $secretObj.data.certSecret | b64dec }}
{{- end }}
{{- $apiKey := (randAlphaNum 32) }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "nr-oracle-service.name" . }}
  labels: {{- include "nr-oracle-service.selectorLabels" . | nindent 4 }}
stringData:
  dbUser: {{ .Values.app.envs.DB_USER | quote }}
  dbPassword: {{ .Values.app.envs.DB_PASSWORD | quote }}
  dbHost: {{ .Values.app.envs.DB_HOST | quote }}
  dbName: {{ .Values.app.envs.DB_NAME | quote }}
  certSecret: {{ $certSecret | quote }} # cert secret is reused.
  apiKey: {{ default $apiKey | quote }}
