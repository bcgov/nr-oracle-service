name: PR

on:
  pull_request:
  merge_group:

concurrency:
  # Cancel in progress for PR open and close, but not merge_group
  group: ${{ github.event.number }}
  cancel-in-progress: true

jobs:
  builds:
    name: Builds
    if: '!github.event.pull_request.head.repo.fork'
    runs-on: ubuntu-24.04
    permissions:
      packages: write
    strategy:
      matrix:
        package: [nr-oracle-service, nr-oracle-service-init]
        include:
          - package: nr-oracle-service
            build_file: Dockerfile
            build_context: .
            triggers: ('src/' 'pom.xml')
          - package: nr-oracle-service-init
            build_file: Dockerfile.certs
            build_context: .
            triggers: ('get_certs.sh' 'Dockerfile.certs')


    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: bcgov/action-builder-ghcr@ace71f7a527ca6fc43c15c7806314be5a4579d2c # v2.3.0
        with:
          package: ${{ matrix.package }}
          tag: ${{ github.event.number }}
          token: ${{ secrets.GITHUB_TOKEN }}
          build_file: ${{ matrix.build_file }}
          build_context: ${{ matrix.build_context }}
          triggers: ${{ matrix.triggers }}
          build_args: |
            APP_VERSION=${{ github.event.number }}


  deploys:
    name: Deploys
    needs:
      - builds
    runs-on: ubuntu-24.04
    environment: test
    env:
      project_name: nr-oracle
      app_name: nr-oracle-service
      environment: development
      secret_path_env: dev # this path is different from the path in the broker
    steps:
      - name: Install CLI tools from OpenShift Mirror
        uses: redhat-actions/openshift-tools-installer@144527c7d98999f2652264c048c7a9bd103f8a82 # v1
        with:
          oc: "4.14.37"

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Deploy to Openshift
        working-directory: charts/nr-oracle-service
        shell: bash
        run: |
          oc login --token=${{ secrets.oc_token }} --server=${{ vars.oc_server }}
          oc project ${{ vars.OC_NAMESPACE }} # Safeguard!
          # uninstall if found
          helm uninstall ${{ github.event.repository.name }}-${{ github.event.number }} || true

          # Deploy Helm Chart
          helm dependency update
          helm package --app-version="${{ github.event.number }}" --version=${{ github.event.number }} .
          
          helm upgrade \
            --set-string app.envs.DB_HOST=${{ secrets.DB_HOST }} \
            --set-string app.envs.DB_NAME=${{ secrets.DB_NAME }} \
            --set-string app.envs.DB_PASSWORD=${{ secrets.DB_PWD }} \
            --set-string app.envs.DB_USER=${{ secrets.DB_USER }} \
            --set-string app.envs.DB_PORT="1543" \
            --set-string image.tag="${{ github.event.number }}" \
            --set-string namespace=${{ vars.oc_namespace }}  \
            --install --wait --atomic  ${{ github.event.repository.name }}-${{ github.event.number }} \
            --values values.yaml \
            ./${{ github.event.repository.name }}-${{ github.event.number }}.tgz

          # print history 
          helm history ${{ github.event.repository.name }}-${{ github.event.number }}
          
          # Remove old build runs, build pods and deployment pods
          oc delete po --field-selector=status.phase==Succeeded
